// <auto-generated />
using System;
using LotteryAnalyzer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LotteryAnalyzer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200816230445_ADD_HTML_TAG_SYSTEM")]
    partial class ADD_HTML_TAG_SYSTEM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LotteryAnalyzer.Models.Lottery", b =>
                {
                    b.Property<Guid?>("LotteryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastDrawDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("LotteryDateTagBrokerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LotteryDateTagId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LotteryHtmlTagBrokerId")
                        .HasColumnType("uuid");

                    b.Property<string>("LotteryName")
                        .HasColumnType("text");

                    b.Property<string>("LotteryUrl")
                        .HasColumnType("text");

                    b.HasKey("LotteryId");

                    b.HasIndex("LotteryDateTagId");

                    b.HasIndex("LotteryHtmlTagBrokerId");

                    b.ToTable("Lottery");

                    b.HasData(
                        new
                        {
                            LotteryId = new Guid("246a70d1-2103-4fc4-b259-d451ee3ce86a"),
                            LastDrawDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LotteryDateTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e83"),
                            LotteryName = "Lotto Max",
                            LotteryUrl = "https://www.wclc.com/winning-numbers/lotto-max-extra.htm"
                        },
                        new
                        {
                            LotteryId = new Guid("b31b44b3-523b-436b-a006-ef8f748cfe68"),
                            LastDrawDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LotteryDateTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e84"),
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e83"),
                            LotteryName = "Lotto 649",
                            LotteryUrl = "https://www.wclc.com/winning-numbers/lotto-649-extra.htm"
                        },
                        new
                        {
                            LotteryId = new Guid("8c22d69b-4b39-438a-81cb-fc1c1bc3b2c6"),
                            LastDrawDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LotteryDateTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e84"),
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e83"),
                            LotteryName = "Western 649",
                            LotteryUrl = "https://www.wclc.com/winning-numbers/Western-649-extra.htm"
                        });
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.LotteryHtmlTag", b =>
                {
                    b.Property<Guid?>("LotteryHtmlTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HtmlTag")
                        .HasColumnType("text");

                    b.Property<Guid?>("LotteryHtmlTagBrokerId")
                        .HasColumnType("uuid");

                    b.HasKey("LotteryHtmlTagId");

                    b.HasIndex("LotteryHtmlTagBrokerId");

                    b.ToTable("LotteryHtmlTags");

                    b.HasData(
                        new
                        {
                            LotteryHtmlTagId = new Guid("6fa14576-2c64-4fd6-892f-eb000bc6cae9"),
                            HtmlTag = "pastWinNumber",
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e83")
                        },
                        new
                        {
                            LotteryHtmlTagId = new Guid("6fa14576-2c64-4fd6-892f-eb000bc6cae0"),
                            HtmlTag = "pastWinNumDate",
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e84")
                        });
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.LotteryHtmlTagBroker", b =>
                {
                    b.Property<Guid?>("LotteryHtmlTagBrokerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("LotteryHtmlTagBrokerId");

                    b.ToTable("LotteryHtmlTagBrokers");

                    b.HasData(
                        new
                        {
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e83")
                        },
                        new
                        {
                            LotteryHtmlTagBrokerId = new Guid("80f2cc4d-8477-49c3-9dc9-91ded3d84e84")
                        });
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.LotteryNumber", b =>
                {
                    b.Property<Guid?>("LotteryNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LotteryId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("TimesPicked")
                        .HasColumnType("integer");

                    b.HasKey("LotteryNumberId");

                    b.HasIndex("LotteryId");

                    b.ToTable("LotteryNumbers");
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.SearchStatistics", b =>
                {
                    b.Property<Guid?>("SearchStatisticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LotteryId")
                        .HasColumnType("text");

                    b.Property<int>("TotalTimesSearched")
                        .HasColumnType("integer");

                    b.HasKey("SearchStatisticId");

                    b.ToTable("SearchStatistics");
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.User", b =>
                {
                    b.Property<Guid?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.Lottery", b =>
                {
                    b.HasOne("LotteryAnalyzer.Models.LotteryHtmlTagBroker", "DrawDateTagBroker")
                        .WithMany()
                        .HasForeignKey("LotteryDateTagId");

                    b.HasOne("LotteryAnalyzer.Models.LotteryHtmlTagBroker", "LotteryNumberHtmlTagBroker")
                        .WithMany("Lotteries")
                        .HasForeignKey("LotteryHtmlTagBrokerId");
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.LotteryHtmlTag", b =>
                {
                    b.HasOne("LotteryAnalyzer.Models.LotteryHtmlTagBroker", "HtmlTagBroker")
                        .WithMany("LotteryTags")
                        .HasForeignKey("LotteryHtmlTagBrokerId");
                });

            modelBuilder.Entity("LotteryAnalyzer.Models.LotteryNumber", b =>
                {
                    b.HasOne("LotteryAnalyzer.Models.Lottery", "Lottery")
                        .WithMany("LotteryNumbers")
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
